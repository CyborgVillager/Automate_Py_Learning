 Key Legend:
                -- = current version
                -wor: = working on this ver
                 <-x_x-> = bug
                 |x_x| = bug fixed
                 <-o_o-> = design issue
                 |o_o| = design issue fixed


                     ~Updating to repo~
               | --------------------------- |
               | v# : Short Version Title    |
               | Description: v# description |
               | --------------------------- |

 v0 README created: README.txt created, will be using chapter -> Working With Excel as version 0, and build upon
                        that. Due to previous versions for this respo had 0 Version_Info.txt till now.
                        Folders that are not part v0 are the following:
                        -first_steps
                        -Key_Mouse_Gui_Automation
                        -math_quiz
                        -pattern_matching_reg_expression
                        -second_step

                        Any future version info will have their respective data included.

 v1 Version_Info & working_with_excel Source created : Updated the respo on the information regarding old code that are
                                                            not part of v0, and what future version info will discuss.
                                                            Source folder for working_with_excel has been created.

 v2 Aquired Example Excel Sheets: aquired example excel sheets, and made 2 .py files excel_0 & excel_1 to make references to
                                their respective excel files and aquired the sheet info

 v3 Getting Cell Info from Sheet: Users can see the sheet's cell info from excel_2.py and get a sense of what data the
                                        cells are holding in the excel sheet.

 v4 Excel Max Rw & Column : Made a file called excel_3.py in which the user will be able to see the sheet#, max rows
                                max columns, and see the results in a sentence format

                             v4.5 Edit: Will be finishing up on python excel. Afterwords will get back to web-scraping.
                                        With these two Ill be combining tkinter to make a gui interface, in which the
                                        user will get info from a site and have the option to export it as an excel
                                        sheet

v5 Getting Rows & Columns from Sheet info Part 1: the py file excel_4.py  aquires the cell objects from A1 - D3 and makes
                                                a 'container of each subject with their  corrisponding data
 ----------------------------    ----------------------------   ------------------------- ------------------------------
 v6 Getting Rows & Columns from Sheet info Part 2: This time the py file excel_5.py will aquire the list value of
                                                        each row/column and prints its corrisponding information to the
                                                         user.
                                                         An updated solution to the outdate information that was on
                                                         the book can be found @
                                                         https://stackoverflow.com/questions/42603795/typeerror-generator-object-is-not-subscriptable
                                                         The .py file excel_5 has been updated to fit 2020's standard

 v7 Updated Census Data to 2020 format : Made a .py file called excel_6 in wghich will read the census
                                                        population from excel_docs/censuspopdata.xlsx

                                                        It will conver the population & the number of census tracts for
                                                        each county that are listed in the excel file.

                                                        Updated excel_source to include pprint, and updated the information
                                                        to include more information on said imports, and helped
                                                        modify the design, for better readability

                                                        Solution if anybody is stuck on re-fixing the old code,
                                                         https://www.linuxquestions.org/questions/linux-software-2/python-4175612595/
                                                        Also remember to check the library updated information regaarding
                                                        openpyxl & pprint https://docs.python.org/3/library/pprint.html
                                                        https://openpyxl.readthedocs.io/en/stable/

                                          --v7.5 Edit: Deleted census2010 data, feel free to use excel_6.py/run it.
                                            Once it has run census2010 will be filled with the data again.
                                            Can be used for 2020, for that you just need to include the data that the
                                            excel sheet for census2020 will have
  ----------------------------    ----------------------------   ------------------------- ------------------------------
  v8 Will be reactivated @ 1/20/20:  excel_7.py work in prog - reactivated @ 1/20/20

  v9 Web Scrap Reactivated: created a new folder called Web_Scrap and moved web_scrapping (OLD) to it. Made a new folder
                                called web_scrapping_1_19_20, this will be the outlet for the GUI mini project
                                combining tkinter to make a gui interface, in which the
                                        user will get info from a site and have the option to export it as an excel
                                        sheet
                                        Modification of
                                        https://realpython.com/beautiful-soup-web-scraper-python/ to include a
                                        more indepth info about web-scraping

v10 Basic Web Scrap: basic web scrap for monster.com, will be improving upon the concept and add more features
                        on later versions. New source folder/file has been created called web_scrap_source
                        new file to scrap monster.com is called monster_scrap.py. These files can be located @
                        Web_scrapping_1_19_20

v11 Updated Web Scrap Monster: Updated monster_scrap.py to include more info and to give visual cues to help
                               aid the user in the terminal. Once the web scrap is 100% complete will conver this into
                               a gui interface & give an export option to excel.

                               Made a new source file called colors.py to help with the visual aid


v12 Visual Cue & Modified Monster_Scrap.py: Updated the file to check if the information is not N/A. If not
                                                It will just continue and show the other job postings

v13 Check if Keyword is Refine: Monster_Scrap.py will help assist the user if their keyword for their job/career is
                                    refined enough to be searched on the site. If not it will notify them of this issue
                                     and tell them to refine their keyword of either the job or location

                            v13.5 Edit: Updated Monster_Scrap.py comments
                                         if the user keyword has no results, it will notify them of the issue and ask
                                         them to refine their input, else it will tell them the number of times their
                                         keyword pops up on the site
                                         --Removed--
                                         print('Once you have placed a Url, press Space then hit Enter to continue.')
                                         Due to the user only have to type the job name & location. This
                                         statement became irrelevant
  ----------------------------    ----------------------------   ------------------------- ------------------------------
v14 Added Links: Users can click on the links to job postings. This will give the user an
                ability to further read the job posting info


--v15 Added Excel Sheets: Added Excel Sheets example from Automate with Python, will be using these to help further
                            for python -> excel. These will help with the GUI process of exporting the data to be used
                                in an excel format.